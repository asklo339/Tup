--- a/project/linux/makefile
+++ b/project/linux/makefile
@@ -4,8 +4,8 @@
 
 default all: multiThreaded
 
-uname_m := $(shell uname -m)
-uname_n := $(shell uname -n)
+uname_m ?= $(shell uname -m)
+uname_n ?= $(shell uname -n)
 $(info uname -m is $(uname_m))
 ifeq ($(uname_m), armv7l)
 JIT_FLAGS := -DBOXEDWINE_DYNAMIC_ARMV7 -DBOXEDWINE_DYNAMIC
@@ -102,17 +102,17 @@
 INCLUDES += -I../../lib/glew/include
 INCLUDES += -I../../lib/imgui
 
-SDL_CFLAGS = $(shell sdl2-config --cflags)
-SDL_LIBS = $(shell sdl2-config --libs)
-CPPFLAGS ?= -std=c++17 -O2 -Wall -Wno-invalid-offsetof -Wno-delete-incomplete -Wno-unused-result -Wno-unknown-pragmas -Wno-unused-local-typedefs -Wno-unused-variable -Wno-unused-function -Wno-unused-but-set-variable $(INCLUDES) -DBOXEDWINE_RECORDER -DBOXEDWINE_ZLIB -DBOXEDWINE_HAS_SETJMP -DSDL2=1 "-DGLH=<SDL_opengl.h>" -DBOXEDWINE_OPENGL_SDL -DSIMDE_SSE2_NO_NATIVE -DBOXEDWINE_POSIX -DBOXEDWINE_OPENGL_IMGUI_V2 $(SDL_CFLAGS) $(EXTRA_CPP_FLAGS)
+SDL_CFLAGS = $(shell @TERMUX_PREFIX@/bin/sdl2-config --cflags)
+SDL_LIBS = $(shell @TERMUX_PREFIX@/bin/sdl2-config --libs)
+CPPFLAGS_ORIG ?= -std=c++17 -O2 -Wall -Wno-invalid-offsetof -Wno-delete-incomplete -Wno-unused-result -Wno-unknown-pragmas -Wno-unused-local-typedefs -Wno-unused-variable -Wno-unused-function -Wno-unused-but-set-variable $(INCLUDES) -DBOXEDWINE_RECORDER -DBOXEDWINE_ZLIB -DBOXEDWINE_HAS_SETJMP -DSDL2=1 "-DGLH=<SDL_opengl.h>" -DBOXEDWINE_OPENGL_SDL -DSIMDE_SSE2_NO_NATIVE -DBOXEDWINE_POSIX -DBOXEDWINE_OPENGL_IMGUI_V2 $(SDL_CFLAGS) $(EXTRA_CPP_FLAGS)
 
-LDFLAGS = -L./linux_build/lib -lcurl -lssl -lcrypto -lpthread -lm -lz -lminizip -lGL -lstdc++ -lstdc++fs $(SDL_LIBS)
+LDFLAGS_ORIG = -L./linux_build/lib -lcurl -lssl -lcrypto -lm -lz -lminizip -lGL -lc++_shared $(SDL_LIBS)
 
 #$(TEST_BUILD_DIR)/boxedwineTest: $(TEST_OBJS)
 #	$(CC) $(TEST_OBJS) -o $@ $(LDFLAGS)
 
 $(BUILD_DIR)/$(TARGET_EXEC): $(OBJS)
-	$(CC) $(OBJS) -o $@ $(LDFLAGS)
+	$(CC) $(OBJS) -o $@ $(LDFLAGS) $(LDFLAGS_ORIG)
 
 # assembly
 $(BUILD_DIR)/%.s.o: %.s
@@ -122,12 +122,12 @@
 # c source
 $(BUILD_DIR)/%.c.o: %.c
 	$(MKDIR_P) $(dir $@)
-	$(CC) $(CPPFLAGS) $(CFLAGS) -c $< -o $@
+	$(CC) $(CPPFLAGS) $(CPPFLAGS_ORIG) $(CFLAGS) -c $< -o $@
 
 # c++ source
 $(BUILD_DIR)/%.cpp.o: %.cpp
 	$(MKDIR_P) $(dir $@)
-	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -MMD -MP -c $< -o $@
+	$(CXX) $(CPPFLAGS) $(CPPFLAGS_ORIG) $(CXXFLAGS) -MMD -MP -c $< -o $@
 
 .PHONY: clean
 
