From dd24bdff9696f139b91186bbcf04b28c5203d64e Mon Sep 17 00:00:00 2001
From: PixelyIon <pixelyion@protonmail.com>
Date: Sat, 12 Aug 2023 12:42:15 +0000
Subject: [PATCH] wineserver+ntdll: Support abstract sockets for wineserver IPC

Adds support for using abstract sockets for wineserver IPC rather than named
sockets since certain platforms such as Android don't allow named sockets on
the filesystem due to SELinux restrictions. As a result of these limitations
this behavior is enabled on Android by default.
---
 configure.ac             |  1 +
 dlls/ntdll/unix/server.c | 12 ++++++++++--
 server/request.c         | 10 ++++++++++
 3 files changed, 21 insertions(+), 2 deletions(-)

diff --git a/configure.ac b/configure.ac
index 3b175fa3993..a86aa35132a 100644
--- a/configure.ac
+++ b/configure.ac
@@ -728,6 +728,7 @@ case $host_os in
 
   linux-android*)
     AC_DEFINE(_GNU_SOURCE,1,[Define to 1 to enable GNU extensions on Linux])
+    AC_DEFINE(WINESERVER_ABSTRACT_SOCKET,1,[Define to 1 to use abstract sockets for wineserver])
     DLLFLAGS="$DLLFLAGS -fPIC"
     LDDLLFLAGS="-fPIC"
     LDEXECFLAGS="-Wl,-pie"
diff --git a/dlls/ntdll/unix/server.c b/dlls/ntdll/unix/server.c
index 6148cfddce2..1d7b1f00ecd 100644
--- a/dlls/ntdll/unix/server.c
+++ b/dlls/ntdll/unix/server.c
@@ -1390,15 +1390,16 @@ static int server_connect(void)
         {
             usleep( 100000 * retry * retry );
             start_server( TRACE_ON(server) );
-            if (lstat( SOCKETNAME, &st ) == -1) continue;  /* still no socket, wait a bit more */
         }
+#ifndef WINESERVER_ABSTRACT_SOCKET
         else if (lstat( SOCKETNAME, &st ) == -1) /* check for an already existing socket */
         {
             if (errno != ENOENT) fatal_perror( "lstat %s/%s", server_dir, SOCKETNAME );
             start_server( TRACE_ON(server) );
-            if (lstat( SOCKETNAME, &st ) == -1) continue;  /* still no socket, wait a bit more */
         }
 
+        if (lstat( SOCKETNAME, &st ) == -1) continue;  /* still no socket, wait a bit more */
+
         /* make sure the socket is sane (ISFIFO needed for Solaris) */
         if (!S_ISSOCK(st.st_mode) && !S_ISFIFO(st.st_mode))
             fatal_error( "'%s/%s' is not a socket\n", server_dir, SOCKETNAME );
@@ -1409,6 +1410,13 @@ static int server_connect(void)
         addr.sun_family = AF_UNIX;
         strcpy( addr.sun_path, SOCKETNAME );
         slen = sizeof(addr) - sizeof(addr.sun_path) + strlen(addr.sun_path) + 1;
+#else  /* WINESERVER_ABSTRACT_SOCKET */
+        addr.sun_family = AF_UNIX;
+        addr.sun_path[0] = 0; // abstract namespace
+        strcpy( addr.sun_path + 1, SOCKETNAME );
+        slen = sizeof(addr) - sizeof(addr.sun_path) + strlen(addr.sun_path + 1) + 2;
+#endif
+
 #ifdef HAVE_STRUCT_SOCKADDR_UN_SUN_LEN
         addr.sun_len = slen;
 #endif
diff --git a/server/request.c b/server/request.c
index 343e1a92e0e..2d380b60f46 100644
--- a/server/request.c
+++ b/server/request.c
@@ -587,12 +587,14 @@ static void master_socket_poll_event( struct fd *fd, int event )
     }
 }
 
+#ifndef WINESERVER_ABSTRACT_SOCKET
 /* remove the socket upon exit */
 static void socket_cleanup(void)
 {
     static int do_it_once;
     if (!do_it_once++) unlink( server_socket_name );
 }
+#endif
 
 /* create a directory and check its permissions */
 static void create_dir( const char *name, struct stat *st )
@@ -844,8 +846,14 @@ static void acquire_lock(void)
 
     if ((fd = socket( AF_UNIX, SOCK_STREAM, 0 )) == -1) fatal_error( "socket: %s\n", strerror( errno ));
     addr.sun_family = AF_UNIX;
+#ifndef WINESERVER_ABSTRACT_SOCKET
     strcpy( addr.sun_path, server_socket_name );
     slen = sizeof(addr) - sizeof(addr.sun_path) + strlen(addr.sun_path) + 1;
+#else
+    addr.sun_path[0] = 0; // abstract namespace
+    strcpy( addr.sun_path + 1, server_socket_name );
+    slen = sizeof(addr) - sizeof(addr.sun_path) + strlen(addr.sun_path + 1) + 2;
+#endif
 #ifdef HAVE_STRUCT_SOCKADDR_UN_SUN_LEN
     addr.sun_len = slen;
 #endif
@@ -859,8 +867,10 @@ static void acquire_lock(void)
         }
         fatal_error( "bind: %s\n", strerror( errno ));
     }
+#ifndef WINESERVER_ABSTRACT_SOCKET
     atexit( socket_cleanup );
     chmod( server_socket_name, 0600 );  /* make sure no other user can connect */
+#endif
     if (listen( fd, 5 ) == -1) fatal_error( "listen: %s\n", strerror( errno ));
 
     if (!(master_socket = alloc_object( &master_socket_ops )) ||
